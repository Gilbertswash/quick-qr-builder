generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  role          String   @default("user")
  passwordHash  String?

  accounts      Account[]
  sessions      Session[]
  qrCodes       QrCode[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model QrCode {
  id         String   @id @default(cuid())
  ownerId    String
  title      String?
  targetUrl  String
  shortCode  String   @unique
  createdAt  DateTime @default(now())

  scans      Scan[]
  user       User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@index([ownerId])
  @@index([shortCode])
}

model Scan {
  id         String   @id @default(cuid())
  qrCodeId   String
  scannedAt  DateTime @default(now())
  ip         String?
  country    String?
  region     String?
  city       String?
  lat        Float?
  lon        Float?
  userAgent  String?
  referer    String?

  qrCode     QrCode   @relation(fields: [qrCodeId], references: [id], onDelete: Cascade)

  @@index([qrCodeId, scannedAt])
}
